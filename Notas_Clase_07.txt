-----------VECTORES PARALELOS--------19/04/2018

/*-----------USO DE GIT----------------*/


CREACION DE NUEVO REPOSITORIO. GITHUB---->REPOSITORIO | GIT----> TECNOLOGIA
-INICIALIZAR REPOSITORIO CON ARCHIVO README.MD

-INTERFAZ DE USUARIO.
-CONSOLA.
-CONTROL DE VERSIONADO.---->PERMITE GUARDAR Y VOLVER A VERSIONES ANTERIORES. ***ROLLBACK***


-GUIT GUI HERE----->CLONE EXISTING REPOSITORY. BAJAMOS PERMISOS PARA SINCRONIZAR CON EL ORIGINAL
-SOURCE LOCATION--->DESDE DONDE SE CLONA EL REPOSITORIO. *ES EL LINK DEL REPOSITORIO EN GITHUB*
-TARGET------------>HACIA DONDE LO QUIERO LLEVAR (DONDE LO GUARDO).
-CREAR LA CARPETA-->ARCHIVO INICIAL <README> CARPETA GIT *NO SE TOCA* ***VER CARPETAS OCULTAS - ALT+92 | ó \GIT***.

SECTORES IMPORTANTES--

-COLOR SALMON-->TODOS LOS ARCHIVOS QUE NO ESTAMOS SIGUIENDO <QUE NO TIENEN ESTADO>
-COLOR VERDE--->ARCHIVOS QUE ESTAN SIENDO SEGUIDOS.
-COLOR AMARILLO>CAMBIOS QUE ESTAMOS HACIENDO EN LOS ARCHIVOS.
-BOTONERA------>PROCESO DE SEGUIR UN ARCHIVO,PERSISTIR EL CAMBIO,SINCRONIZARLO EN LA NUBE
	-RESCAN--->APARECEN LOS CAMBIOS QUE REALIZAMOS.
	-STAGE CHANGED-->ARCHIVO NO SEGUIDO PASA A LA CONSOLA DE SEGUIMIENTO. 
	-COMMIT--->COMPROMETER EL ARCHIVO **COLOCAR UN MENSAJE = LOGRAMOS QUE EL CODIGO FUNCIONE EN ALGO**
		-EN EL TEXTBOX COMENTAMOS LO QUE SOLUCIONAMOS EJ.FALTA EL ";", "SOLUCION DEL PROBLEMA"
		-DESCRIPCION QUE PERMITA ENTENDER QUE PASO EN ESE COMMIT.
		-DESAPARECE EL ARCHIVO Y SEGUIMOS TRABAJANDO.
-VISUALIZE ALL BRANCH HISTORY--->VER CADA UNA DE LAS VERSIONES EN QUE REALIZAMOS CAMBIOS.
-PUSH---------->SINCRONIZAR A USUARIO GITHUB.
	-SINCRONIZA CONTRA EL ORIGEN.
	-PUSH-->PIDE USUARIO GITHUB + PASS = PROCESO Y SUCCES!!!.

-POR CONSOLA---->GIT BASH 
	-GIT CLONE -->le pasamos la url del repositorio a clonar